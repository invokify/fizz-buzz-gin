// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/fizz-buzz": {
            "get": {
                "description": "The original fizz-buzz consists in writing all numbers from ` + "`" + `1` + "`" + ` to ` + "`" + `100` + "`" + `, and replacing all multiples of ` + "`" + `3` + "`" + ` by ` + "`" + `fizz` + "`" + `, all multiples of ` + "`" + `5` + "`" + ` by ` + "`" + `buzz` + "`" + `, and all multiples of ` + "`" + `15` + "`" + ` by ` + "`" + `fizzbuzz` + "`" + `. The output would look like this: 1,2,fizz,4,buzz,fizz,7,8,fizz,buzz,11,fizz,13,14,fizzbuzz,fizz,...",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fizz-buzz"
                ],
                "summary": "Launches the game with the required parameters",
                "operationId": "launch-fizz-buzz",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First string related to multiples of int1",
                        "name": "string1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Second string related to multiples of int2",
                        "name": "string2",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "multiple related to string1",
                        "name": "int1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "multiple related to string2",
                        "name": "int2",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "number of elements to return",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
